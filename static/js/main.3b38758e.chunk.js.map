{"version":3,"sources":["components/SideMenu.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/PageHeader.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","pages/PersonalData.js","Admin.js","App/App.jsx","serviceWorker.js","index.js"],"names":["itemsList","text","path","exact","icon","btnExit","useStyles","makeStyles","marginRight","btnMenu","width","height","paddingTop","paddingLeft","btnClose","btnHover","color","background","border","borderRadius","active","btn","backgroundColor","activeBtnExit","withRouter","props","useState","inactive","setInactive","history","location","useLocation","useEffect","removeActiveClassFromSubMenu","onCollapse","document","querySelectorAll","forEach","el","classList","remove","menuItems","addEventListener","e","next","nextElementSibling","toggle","classes","className","onClick","List","map","item","index","ListItem","button","key","push","pathname","ListItemText","primary","theme","root","margin","spacing","label","textTransform","minWidth","secondary","palette","light","main","Controls","Input","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","target","convertToDefEventPara","Button","size","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","JSON","stringify","parse","departments","x","department","departmentId","modal","top","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","setValues","handleInputChange","resetForm","useForm","onSubmit","preventDefault","Grid","container","xs","type","pageHeader","padding","display","marginBottom","pageIcon","pageTitle","opacity","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","direction","cellId","TblPagination","TablePagination","component","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","sort","stableSort","fn","getComparator","slice","dialogWrapper","position","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","Typography","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","fontSize","ConfirmDialog","confirmDialog","setConfirmDialog","IconButton","disableRipple","subTitle","DialogActions","onConfirm","pageContent","searchInput","newButton","statementContainer","toolbar","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","Paper","Toolbar","btnField","startIcon","InputProps","startAdornment","InputAdornment","Search","toLowerCase","includes","TableBody","openInPopup","employee","recordIndex","findIndex","cancelBtn","PersonalData","Admin","from","render","App","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3b38758e.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n import ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport AllInboxOutlinedIcon from '@material-ui/icons/AllInboxOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\n\r\n\r\n\r\n\r\n\r\n\r\n export const itemsList = [\r\n    {\r\n      text: 'Всі заявки',\r\n        path: '/all-statements',\r\n        exact: true,\r\nicon: <AllInboxOutlinedIcon/>,\r\n\r\n    },\r\n    {\r\n      text: 'Особисті дані',\r\n        path: '/personal-data',\r\n        exact: true,\r\nicon: <PermIdentityOutlinedIcon/>,\r\n    },\r\n  ];\r\n\r\n  const btnExit = [\r\n    {\r\n      text: 'Вийти з кабінету',\r\n          path: '/',\r\n        exact: true,\r\n    }\r\n  ]\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    marginRight:'10px'\r\n  },\r\n    btnMenu: {\r\n        width: '45px',\r\n        height: '45px',\r\n        paddingTop: '20px',\r\n        paddingLeft: '29px'\r\n        \r\n    },\r\n    btnClose: {\r\n      paddingTop: '17px',\r\n     width: '45px',\r\n        height: '45px', \r\n    },\r\n    btnHover: {\r\n    '&:hover': {\r\n      color: 'red',\r\n      background: '#fff',\r\n      border: '2px solid red',\r\n      borderRadius: '4px'\r\n    }\r\n    },\r\n     active: {\r\n        background: '#fff',\r\n       color: '#3f51b5 ',\r\n        border:'1px solid #3f51b5',\r\n        \r\n        borderRadius: '4px',\r\n     \r\n    },\r\n   \r\n    btn: {\r\n      color: 'balack',\r\n      '&:hover': {\r\n               backgroundColor: '#fff',\r\n             \r\n          }\r\n    },\r\n    activeBtnExit: {\r\n    background: '#fff',\r\n      color: 'red',\r\n      border: '1px solid red',\r\n     borderRadius: '4px',\r\n   '&:hover': {\r\n     backgroundColor: '#fff',\r\n     border:'1px solid red',\r\n             \r\n          }\r\n  },\r\n    \r\n    \r\n })\r\n\r\n\r\n\r\n\r\n\r\nconst SideMenu = (props) => {\r\n  const [inactive, setInactive] = useState(true);\r\n    const { history } = props;\r\n    const location = useLocation();\r\n  useEffect(() => {\r\n    if (inactive) {\r\n      removeActiveClassFromSubMenu();\r\n    }\r\n\r\n    props.onCollapse(inactive);\r\n  }, [inactive]);\r\n\r\n  //just an improvment and it is not recorded in video :(\r\n  const removeActiveClassFromSubMenu = () => {\r\n    document.querySelectorAll(\".sub-menu\").forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    let menuItems = document.querySelectorAll(\".menu-item\");\r\n    menuItems.forEach((el) => {\r\n      el.addEventListener(\"click\", (e) => {\r\n        const next = el.nextElementSibling;\r\n        removeActiveClassFromSubMenu();\r\n        menuItems.forEach((el) => el.classList.remove(\"active\"));\r\n        el.classList.toggle(\"active\");\r\n        \r\n        if (next !== null) {\r\n          next.classList.toggle(\"active\");\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={`side-menu ${inactive ? \"inactive\" : \"\"}`}>\r\n      <div className=\"top-section\">\r\n        \r\n        <div onClick={() => setInactive(!inactive)} className=\"toggle-menu-btn\">\r\n          {inactive ? (\r\n                    <MenuIcon className={classes.btnMenu}></MenuIcon>) : (<ArrowBackIosRoundedIcon className={classes.btnClose}>\r\n             </ArrowBackIosRoundedIcon>)}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"divider\"></div>\r\n\r\n          <div className=\"main-menu\">\r\n              \r\n\r\n              <List>\r\n          {itemsList.map((item, index) => {\r\n            const { text, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.active : classes.btn}>\r\n                <div className={classes.icon}>\r\n                  {item.icon}\r\n</div>\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n        <List>\r\n          {btnExit.map((item, index) => {\r\n            const { text, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.activeBtnExit : classes.btn}>\r\n<ExitToAppOutlinedIcon className={classes.icon}/>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n       \r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter (SideMenu);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\n import Select from \"./Select\";\r\n// import Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n     Select,\r\n    // Checkbox,\r\n    DatePicker,\r\n    Button,\r\n    ActionButton\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n"," import React from 'react'\r\n import { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\n export default function Select(props) {\r\n\r\n     const { name, label, value,error=null, onChange, options } = props;\r\n\r\n     return (\r\n         <FormControl variant=\"outlined\"\r\n         {...(error && {error:true})}>\r\n             <InputLabel>{label}</InputLabel>\r\n             <MuiSelect\r\n                 label={label}\r\n                 name={name}\r\n                 value={value}\r\n                 onChange={onChange}>\r\n                 <MenuItem value=\"\">None</MenuItem>\r\n                 {\r\n                     options.map(\r\n                         item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                     )\r\n                 }\r\n             </MuiSelect>\r\n             {error && <FormHelperText>{error}</FormHelperText>}\r\n         </FormControl>\r\n     )\r\n }\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\r\n\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n","const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    // { id: '1', title: 'Development' },\r\n    // { id: '2', title: 'Marketing' },\r\n    // { id: '3', title: 'Accounting' },\r\n    // { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    return employees.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1]//.title\r\n    }))\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    modal: {\r\n    top:'-13px'\r\n}\r\n})\r\n\r\n// const genderItems = [\r\n//     { id: 'male', title: 'Male' },\r\n//     { id: 'female', title: 'Female' },\r\n//     { id: 'other', title: 'Other' },\r\n// ]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n    const classes = useStyles()\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} >\r\n            <Grid container >\r\n                <Grid item xs={13}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Здобувач ліцензії\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                        type=\"search\"\r\n                        helperText=\"(найменування юридичної особи/прізвище, ім’я,\r\n                                        по батькові фізичної особи - підприємця)\"\r\n\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                        type=\"search\"\r\n                        helperText=\"(місцезнаходження юридичної особи/місце реєстрації фізичної особи - підприємця)\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                        type=\"search\"\r\n                        helperText=\"(місце (місця) провадження медичної практики)*\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                        type=\"search\"\r\n                        helperText=\"(для юридичних осіб - код згідно з ЄДРПОУ, для фізичних осіб - підприємців -\"\r\n                    />\r\n\r\n \r\n                    <Controls.Input\r\n                        name=\" \"\r\n                        label=\"\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                        type=\"search\"\r\n                        helperText=\"ідентифікаційний код або серія, номер паспорта фізичної особи - підприємця,\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                        type=\"search\"\r\n                        helperText=\"ким і коли виданий (у разі відмови через свої релігійні переконання від прийняття\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                        type=\"search\"\r\n                        helperText=\"реєстраційного номера облікової картки платника податків)\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                        type=\"search\"\r\n                        helperText=\"(прізвище, ім’я, по батькові керівника юридичної особи)\"\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"e-mail\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                        type=\"search\"\r\n                        helperText=\"\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    {/* <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                        type=\"search\"\r\n                        helperText=\"Some important text\"\r\n                    /> */}\r\n                    {/* <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />  */}\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    {/* <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    /> */}\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Подати\" />\r\n                        <Controls.Button\r\n                            text=\"Скасувати\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader:{\r\n        padding:theme.spacing(4),\r\n        display:'flex',\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n    pageIcon:{\r\n        display:'inline-block',\r\n        padding:theme.spacing(2),\r\n        color:'#3c44b1'\r\n    },\r\n    pageTitle:{\r\n        paddingLeft:theme.spacing(4),\r\n        '& .MuiTypography-subtitle2':{\r\n            opacity:'0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        // top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                severity={notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"Ні\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Так\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '100%'\r\n    },\r\n    newButton: {\r\n        padding: '1px 30px',\r\n        marginRight: '22px'\r\n        // position: 'absolute',\r\n        // right: '10px'\r\n    },\r\n    statementContainer: {\r\n        display: 'contents',\r\n        \r\n    },\r\n    toolbar: {\r\n        padding:'0px'\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Тип рішення по заяви' },\r\n    { id: 'email', label: 'Дата подання' },\r\n    { id: 'mobile', label: 'Дата рішення' },\r\n    { id: 'department', label: 'Статус обробки' },\r\n    { id: 'actions', label: 'Дії', disableSorting: true }\r\n]\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n     const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id == 0)\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Збережено',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Успішно видалили',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <PageHeader\r\n                title=\"New Employee\"\r\n                subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            /> */}\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar className={classes.toolbar}>\r\n                    <div className={classes.statementContainer}>\r\n                        \r\n                        <div className={classes.btnField}>\r\n                             <Controls.Button\r\n                        text=\"Створити нову заявку\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                        />\r\n                   </div>\r\n                        <Controls.Input\r\n                        label=\"Пошук по заявам\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    /></div>\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Справді видалити цей запис?',\r\n                                                    subTitle: \"Ви не зможете скасувати цю операцію\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Нова заява\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n    cancelBtn: {\r\n        background: 'red',\r\n        color: '#fff',\r\n        padding:'7px 20px',\r\n         '&:hover': {\r\n      color: '',\r\n        background: 'red',\r\n       \r\n    }\r\n    }\r\n\r\n})\r\nexport default function PersonalData() {\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n           <Button className={classes.cancelBtn}>Cкасувати</Button>\r\n        </div>\r\n    )\r\n}\r\n","import \"../src/App/App.css\";\r\nimport SideMenu, { itemsList } from \"../src/components/SideMenu\";\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Employees from \"./pages/Employees/Employees\";\r\nimport PersonalData from \"./pages/PersonalData\";\r\n\r\n\r\n\r\nfunction Admin() {\r\n  const [inactive, setInactive] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <SideMenu\r\n          onCollapse={(inactive) => {\r\n          setInactive(inactive);\r\n          }}\r\n        />\r\n\r\n        <div className={`container ${inactive ? \"inactive\" : \"\"}`}>\r\n          \r\n         \r\n  <Switch>\r\n                <Route exact from=\"/all-statements\" render={props => <Employees  {...props} />} />\r\n                 <Route exact from=\"/personal-data\" render={props => <PersonalData {...props} />} /> \r\n            </Switch>\r\n         \r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import './App.css';\r\n// import SideMenu from \"../components/SideMenu\";\r\n// import { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n// import Header from \"../components/Header\";\r\n// import PageHeader from '../components/PageHeader';\r\n\r\n\r\n// import Employees from \"../pages/Employees/Employees\";\r\n// import Panel from '../components/Panel';\r\n\r\n\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: \"#333996\",\r\n//       light: '#3c44b126'\r\n//     },\r\n//     secondary: {\r\n//       main: \"#f83245\",\r\n//       light: '#f8324526'\r\n//     },\r\n//     background: {\r\n//       default: \"#f4f5fd\"\r\n//     },\r\n//   },\r\n//   overrides:{\r\n//     MuiAppBar:{\r\n//       root:{\r\n//         transform:'translateZ(0)'\r\n//       }\r\n//     }\r\n//   },\r\n//   props:{\r\n//     MuiIconButton:{\r\n//       disableRipple:true\r\n//     }\r\n//   }\r\n// })\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//   appMain: {\r\n   \r\n//     width: '100%'\r\n//   },\r\n   \r\n// })\r\n\r\n// function App() {\r\n//   const classes = useStyles();\r\n  \r\n\r\n//   return (\r\n//     <ThemeProvider theme={theme}>\r\n      \r\n//       {/* <Panel/> */}\r\n//       <div className={classes.appMain}>\r\n//         {/* <Header /> */}\r\n//          <SideMenu /> \r\n//         <Employees />\r\n//       </div>\r\n//       <CssBaseline />\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","import \"./App.css\";\r\nimport SideMenu, { menuItems } from \"../components/SideMenu\";\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Admin from \"../Admin\";\r\n\r\n\r\n\r\n function App() {\r\n  const [inactive, setInactive] = useState(false);\r\n\r\n  return (\r\n    <Admin />)\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}