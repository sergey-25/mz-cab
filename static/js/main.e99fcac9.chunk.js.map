{"version":3,"sources":["components/SideMenu.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Fab.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/PageHeader.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","components/PersonalDataForm.js","pages/PersonalData.js","components/Header.js","Admin.js","App/App.jsx","serviceWorker.js","index.js"],"names":["itemsList","text","path","exact","icon","btnExit","useStyles","makeStyles","marginRight","btnMenu","position","width","height","paddingTop","paddingLeft","btnClose","btnHover","color","background","border","borderRadius","some","active","btn","backgroundColor","activeBtnExit","list","fullList","withRouter","props","classes","React","useState","top","left","bottom","right","state","setState","history","location","useLocation","toggleDrawer","anchor","open","event","type","key","map","Fragment","Button","onClick","fontSize","SwipeableDrawer","onClose","onOpen","className","clsx","role","onKeyDown","Divider","List","item","index","ListItem","button","push","pathname","ListItemText","primary","theme","root","margin","spacing","label","textTransform","minWidth","secondary","palette","light","main","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","FormControlLabel","id","control","Radio","title","Select","options","variant","InputLabel","MenuItem","FormHelperText","DatePicker","utils","DateFnsUtils","locale","uk","disableToolbar","inputVariant","format","date","target","convertToDefEventPara","size","FabAdd","Fab","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","JSON","stringify","parse","departments","x","department","departmentId","breakpoints","up","only","controlsContainer","display","flexWrap","justifyContent","modal","dfsd","gridForm","marginTop","controlBtns","initialFValues","fullName","email","hireDate","Date","isPermanent","productionPlace","edrpou","idNumber","whenIssued","registrationNumber","initials","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","validateOnChange","setValues","handleInputChange","e","resetForm","useForm","useEffect","onSubmit","preventDefault","Grid","xs","pageHeader","padding","marginBottom","pageIcon","pageTitle","opacity","between","overflowX","table","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","TableContainer","style","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","direction","cellId","TblPagination","TablePagination","component","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","sort","stableSort","fn","getComparator","slice","Transition","forwardRef","ref","Slide","dialogWrapper","maxHeight","maxWidth","minHeight","dialogTitle","paddingRight","dialogContent","Popup","openPopup","setOpenPopup","Dialog","paper","TransitionComponent","DialogTitle","Typography","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","message","dialog","textAlign","dialogAction","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","IconButton","disableRipple","subTitle","DialogActions","onConfirm","pageContent","searchInput","newButton","statementContainer","addBtn","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","Paper","Toolbar","startIcon","btnField","InputProps","startAdornment","InputAdornment","Search","toLowerCase","includes","tblContainer","tblHead","TableBody","mobile","openInPopup","employee","recordIndex","findIndex","outlineColor","borderBottom","borderBottomColor","paddingBottom","lineHeight","form","PersonalDataForm","handleChange","prevState","boxShadow","issuer","readOnly","issuercn","serial","subject","subjectcn","locality","o","ou","givenname","middlename","multiline","lastname","address","phone","dns","edrpoucode","drfocode","cancelBtn","PersonalData","Admin","from","render","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e99fcac9.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AllInboxOutlinedIcon from '@material-ui/icons/AllInboxOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport const itemsList = [\r\n    {\r\n      text: 'Всі заявки',\r\n        path: '/all-statements',\r\n        exact: true,\r\nicon: <AllInboxOutlinedIcon/>,\r\n\r\n    },\r\n    {\r\n      text: 'Особисті дані',\r\n        path: '/personal-data',\r\n        exact: true,\r\nicon: <PermIdentityOutlinedIcon/>,\r\n    },\r\n  ];\r\n\r\n  const btnExit = [\r\n    {\r\n      text: 'Вийти з кабінету',\r\n          path: '/',\r\n        exact: true,\r\n    }\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    marginRight:'10px'\r\n  },\r\n  btnMenu: {\r\n    position: 'fixed',\r\n   \r\n        width: '45px',\r\n        height: '45px',\r\n        paddingTop: '12px',\r\n    paddingLeft: '9px',\r\n    \r\n   \r\n      \r\n        \r\n    },\r\n    btnClose: {\r\n      paddingTop: '17px',\r\n     width: '45px',\r\n        height: '45px', \r\n    },\r\n    btnHover: {\r\n    '&:hover': {\r\n      color: 'red',\r\n      background: '#fff',\r\n      border: '2px solid red',\r\n      borderRadius: '4px'\r\n    }\r\n  },\r\n  some: {\r\n      background:'red'\r\n    },\r\n     active: {\r\n        background: '#fff',\r\n       color: '#3f51b5 ',\r\n        border:'1px solid #3f51b5',\r\n        \r\n        borderRadius: '4px',\r\n     \r\n    },\r\n   \r\n    btn: {\r\n      color: 'balack',\r\n      '&:hover': {\r\n               backgroundColor: '#fff',\r\n             \r\n          }\r\n    },\r\n    activeBtnExit: {\r\n    background: '#fff',\r\n      color: 'red',\r\n      border: '1px solid red',\r\n     borderRadius: '4px',\r\n   '&:hover': {\r\n     backgroundColor: '#fff',\r\n     border:'1px solid red',\r\n             \r\n          }\r\n    },\r\n     list: {\r\n    \r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  \r\n    \r\n })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SideMenu=(props)=> {\r\n    const classes = useStyles();\r\n    \r\n\r\n\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n    \r\n    const { history } = props;\r\n  \r\n\r\n  const location = useLocation();\r\n\r\n    \r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n     \r\n      <Divider />\r\n     <List>\r\n          {itemsList.map((item, index) => {\r\n            const { text, onClick } = item;\r\n\r\n             \r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.active : classes.btn}>\r\n                <div className={classes.icon}>\r\n                  {item.icon}\r\n</div>\r\n                <ListItemText primary={text}/>  \r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n        <List>\r\n          {btnExit.map((item, index) => {\r\n            const { text, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.activeBtnExit : classes.btn}>\r\n<ExitToAppOutlinedIcon className={classes.icon}/>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon color=\"primary\" fontSize=\"large\"/></Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter (SideMenu);","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Fab } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function FabAdd(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fab \r\n            variant={variant || \"contained\"}\r\n            size={size || \"medium\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            \r\n                \r\n            {text} <AddIcon />\r\n        </Fab>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\n import Select from \"./Select\";\r\n// import Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport FabAdd from \"./Fab\";\r\n\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n     Select,\r\n    // Checkbox,\r\n    DatePicker,\r\n    Button,\r\n    FabAdd,\r\n    ActionButton\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n           \r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n"," import React from 'react'\r\n import { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\n export default function Select(props) {\r\n\r\n     const { name, label, value,error=null, onChange, options } = props;\r\n\r\n     return (\r\n         <FormControl variant=\"outlined\"\r\n         {...(error && {error:true})}>\r\n             <InputLabel>{label}</InputLabel>\r\n             <MuiSelect\r\n                 label={label}\r\n                 name={name}\r\n                 value={value}\r\n                 onChange={onChange}>\r\n                 <MenuItem value=\"\">None</MenuItem>\r\n                 {\r\n                     options.map(\r\n                         item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                     )\r\n                 }\r\n             </MuiSelect>\r\n             {error && <FormHelperText>{error}</FormHelperText>}\r\n         </FormControl>\r\n     )\r\n }\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { uk } from 'date-fns/locale'\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"dd-MMMM-yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\r\n\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n","const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    // { id: '1', title: 'Development' },\r\n    // { id: '2', title: 'Marketing' },\r\n    // { id: '3', title: 'Accounting' },\r\n    // { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    return employees.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1]//.title\r\n    }))\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n\r\n    root: {\r\n\r\n        '& .MuiFormControl-root': {\r\n           \r\n            [theme.breakpoints.up('xs')]: {\r\n                minWidth:'100%'\r\n            },\r\n            [theme.breakpoints.up('sm')]: {\r\n             \r\n            },\r\n            [theme.breakpoints.only('md')]: {\r\n                minWidth: '600px',\r\n            },\r\n           \r\n        },\r\n    },\r\n\r\n    controlsContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n\r\n\r\n         [theme.breakpoints.up('xs')]: {\r\n               display: 'block',\r\n        flexWrap: 'no-wrap',\r\n        justifyContent: 'space-between',\r\n        },\r\n         \r\n          [theme.breakpoints.only('md')]: {\r\n                 display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n            },\r\n    },\r\n    \r\n\r\n    modal: {\r\n        top: '-13px'\r\n    },\r\n\r\n    dfsd: {\r\n        paddingTop: '16px',\r\n        minWidth: '600px',\r\n    },\r\n    \r\n    gridForm: {\r\n        marginTop: '20px',\r\n    },\r\n\r\n    controlBtns: {\r\n        marginTop: '20px',\r\n    },\r\n}));\r\n\r\n// const genderItems = [\r\n//     { id: 'male', title: 'Male' },\r\n//     { id: 'female', title: 'Female' },\r\n//     { id: 'other', title: 'Other' },\r\n// ]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    // mobile: '',\r\n    // city: '',\r\n    // gender: 'male',\r\n    // departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n    location: '',\r\n    productionPlace: '',\r\n    edrpou: '',\r\n    idNumber: '',\r\n    whenIssued: '',\r\n    registrationNumber: '',\r\n    initials:''\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const { addOrEdit, recordForEdit } = props\r\n    const classes = useStyles()\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n        if ('location' in fieldValues)\r\n            temp.location = fieldValues.location ? \"\" : \"Поле не має бути пустим.\"\r\n            //  temp.location = (/$^|.+@.+..+/).test(fieldValues.location) ? \"\" : \"location is not valid.\"\r\n        \r\n        if ('productionPlace' in fieldValues)\r\n            temp.productionPlace = fieldValues.productionPlace ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n        if ('edrpou' in fieldValues)\r\n            temp.edrpou = fieldValues.edrpou ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n             if ('idNumber' in fieldValues)\r\n            temp.idNumber = (/^[0-9\\b]+$/).test(fieldValues.idNumber) ? \"\" : \"Має бути заповнено в числовому форматі.\"\r\n        \r\n               if ('whenIssued' in fieldValues)\r\n            temp.whenIssued = fieldValues.whenIssued ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n         if ('registrationNumber' in fieldValues)\r\n            temp.registrationNumber = fieldValues.registrationNumber ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n         if ('initials' in fieldValues)\r\n            temp.initials = fieldValues.initials ? \"\" : \"Поле не має бути пустим.\"\r\n        \r\n         if ('email' in fieldValues)\r\n       temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Поле заповнено невірно.\"\r\n        \r\n                // .length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}\r\n                 className={classes.root}>\r\n            <div className={classes.controlsContainer}>\r\n                <div>\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                       \r\n                        name=\"fullName\"\r\n                        label=\"Здобувач ліцензії\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                        type=\"search\"\r\n                        helperText=\"(найменування юридичної особи/прізвище, ім’я,\r\n                                        по батькові фізичної особи - підприємця)\"\r\n\r\n                    />\r\n                </div>\r\n                \r\n                <div >\r\n                    <Controls.Input\r\n                    \r\n                        className={classes.dfsd}\r\n                        label=\"\"\r\n                        name=\"location\"\r\n                        value={values.location}\r\n                        onChange={handleInputChange}\r\n                        error={errors.location}\r\n                        type=\"search\"\r\n                        helperText=\"(місцезнаходження юридичної особи/місце реєстрації фізичної особи - підприємця)\"\r\n                    />\r\n                    </div>\r\n\r\n                    <div >\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"\"\r\n                        name=\"productionPlace\"\r\n                        value={values.productionPlace}\r\n                        onChange={handleInputChange}\r\n                        error={errors.productionPlace}\r\n                        type=\"search\"\r\n                        helperText=\"(місце (місця) провадження медичної практики)*\"\r\n                    />\r\n                </div>\r\n                \r\n                <div >\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"\"\r\n                        name=\"edrpou\"\r\n                        value={values.edrpou}\r\n                        onChange={handleInputChange}\r\n                         error={errors.edrpou}\r\n                        type=\"search\"\r\n                        helperText=\"(для юридичних осіб - код згідно з ЄДРПОУ, для фізичних осіб - підприємців -\"\r\n                    />\r\n                    </div>\r\n \r\n                 <div >\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        name=\"idNumber\"\r\n                        label=\"\"\r\n                         \r\n                        value={values.idNumber}\r\n                        onChange={handleInputChange}\r\n                        error={errors.idNumber}\r\n                        format=\"numeric\"\r\n                        \r\n                        helperText=\"ідентифікаційний код або серія, номер паспорта фізичної особи - підприємця,\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"\"\r\n                        name=\"whenIssued\"\r\n                        value={values.whenIssued}\r\n                        onChange={handleInputChange}\r\n                        error={errors.whenIssued}\r\n                        type=\"search\"\r\n                        helperText=\"ким і коли виданий (у разі відмови через свої релігійні переконання від прийняття\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"\"\r\n                        name=\"registrationNumber\"\r\n                        value={values.registrationNumber}\r\n                        onChange={handleInputChange}\r\n                        error={errors.registrationNumber}\r\n                        type=\"search\"\r\n                        helperText=\"(реєстраційного номера облікової картки платника податків)\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"\"\r\n                        name=\"initials\"\r\n                        value={values.initials}\r\n                        onChange={handleInputChange}\r\n                        error={errors.initials}\r\n                        type=\"search\"\r\n                        helperText=\"(прізвище, ім’я, по батькові керівника юридичної особи)\"\r\n                    />\r\n                </div>\r\n                \r\n                \r\n                <div>\r\n                    <Controls.Input\r\n                    className={classes.root}\r\n                        label=\"e-mail\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                        type=\"search\"\r\n                        helperText=\"\"\r\n                    />\r\n                </div>\r\n                <Grid item xs={12}  className = {classes.gridForm}>\r\n                    {/* <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                        type=\"search\"\r\n                        helperText=\"Some important text\"\r\n                    /> */}\r\n                    {/* <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />  */}\r\n                    <Controls.DatePicker\r\n                      \r\n                        name=\"hireDate\"\r\n                        label=\"\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    {/* <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    /> */}\r\n\r\n                    <div className={classes.controlBtns}>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Подати\" />\r\n                        <Controls.Button\r\n                            text=\"Скасувати\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader:{\r\n        padding:theme.spacing(4),\r\n        display:'flex',\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n    pageIcon:{\r\n        display:'inline-block',\r\n        padding:theme.spacing(2),\r\n        color:'#3c44b1'\r\n    },\r\n    pageTitle:{\r\n        paddingLeft:theme.spacing(4),\r\n        '& .MuiTypography-subtitle2':{\r\n            opacity:'0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel, } from '@material-ui/core'\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        \"& .MuiTable-root\": {\r\n             [theme.breakpoints.between('xs', 'sm')]: {\r\n                padding: '15px',\r\n                background: 'red',\r\n                overflowX: \"auto\",\r\n        },\r\n        },\r\n    },\r\n    table: {\r\n         \r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: theme.palette.primary.light,\r\n            \r\n        \r\n        },\r\n        \r\n        '& tbody td': {\r\n             padding: '0px',\r\n            fontWeight: '300',\r\n             [theme.breakpoints.between('xs', 'sm')]: {\r\n                padding: '0px',\r\n           \r\n                width:'300px',\r\n            },\r\n                [theme.breakpoints.only('xs')]: {\r\n                padding: '0px',\r\n           \r\n                width:'300px',\r\n        },\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <TableContainer style={{overflowX:'auto'}}>\r\n            <Table className={classes.table}>\r\n            {props.children}\r\n        </Table></TableContainer>\r\n       \r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n      \r\n\r\n        return (<TableHead >\r\n\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \r\n\r\n    dialogWrapper: {\r\n        maxHeight: '95%',\r\n       maxWidth: \"80%\", \r\n        position: 'absolute',\r\n         [theme.breakpoints.between('xs','md')]: {\r\n             minWidth: '100%',\r\n             minHeight:'100%',\r\n             margin:'0px'\r\n            },\r\n        \r\n       \r\n        [theme.breakpoints.up('lg')]: {\r\n             display:'flex',\r\n             maxWidth: \"100%\",\r\n             maxHeight: '95%',\r\n              margin:'0px',\r\n            },\r\n        // top: theme.spacing(5)\r\n    },\r\n   \r\n    \r\n    dialogTitle: {\r\n        paddingRight: '10px'\r\n    },\r\n\r\n    dialogContent: {\r\n        padding: '10px',\r\n         [theme.breakpoints.up('xs')]: {\r\n                 padding: '10px',\r\n            },\r\n            [theme.breakpoints.up('sm')]: {\r\n                 padding: '10px',\r\n            },\r\n        [theme.breakpoints.only('md')]: {\r\n                 paddingLeft: '10px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n                 paddingLeft: '52px',\r\n            },\r\n        \r\n    }\r\n\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup}   classes={{ paper: classes.dialogWrapper}} TransitionComponent={Transition}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                severity={notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"Ні\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Так\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \r\n    \r\n    pageContent: {\r\n         margin: theme.spacing(1),\r\n        padding: theme.spacing(1.5)\r\n    },\r\n    searchInput: {\r\n        width: '100%'\r\n    },\r\n    newButton: {\r\n        padding: '1px 30px',\r\n        marginRight: '22px',\r\n        [theme.breakpoints.between('xs', 'sm')]: {\r\n            display:'none', },\r\n        \r\n        // position: 'absolute',\r\n        // right: '10px'\r\n    },\r\n    statementContainer: {\r\n        display: 'contents',\r\n        \r\n    },\r\n   \r\n\r\n    addBtn: {\r\n      [theme.breakpoints.up('xs')]: {\r\n             position: 'fixed',\r\n             bottom: '31px',\r\n        left: '3px',\r\n            },\r\n        [theme.breakpoints.only('m')]: {\r\n             position: 'fixed',\r\n             bottom: '298px',\r\n        left: '3px',\r\n            },\r\n        [theme.breakpoints.up( 'md')]: {\r\n            display:'none', },\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Тип рішення по заяви' },\r\n    { id: 'hireDate', label: 'Дата подання' },\r\n    { id: 'mobile', label: 'Дата рішення' },\r\n    { id: 'department', label: 'Статус обробки' },\r\n    { id: 'actions', label: 'Дії', disableSorting: true }\r\n]\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n     const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id == 0)\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Збережено',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Успішно видалили',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n\r\n\r\n     \r\n    return (\r\n        <>\r\n            {/* <PageHeader\r\n                title=\"New Employee\"\r\n                subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            /> */}\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar  style={{padding:'0px'}}>\r\n                    <div className={classes.statementContainer}>\r\n\r\n\r\n                        <div >\r\n                             <Controls.FabAdd\r\n                        startIcon={<AddIcon />}\r\n                      className={classes.addBtn}\r\n                      \r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                        />\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        <div className={classes.btnField}>\r\n                             <Controls.Button\r\n                        text=\"Створити нову заявку\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                        />\r\n                   </div> \r\n                        <Controls.Input\r\n                        label=\"Пошук по заявам\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    /></div>\r\n                </Toolbar>\r\n                <TblContainer className={classes.tblContainer}>\r\n                    <TblHead className={classes.tblHead} />\r\n                    \r\n                    <TableBody >\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell >{item.hireDate}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Справді видалити цей запис?',\r\n                                                    subTitle: \"Ви не зможете скасувати цю операцію\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Нова заява\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {TextField, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n      \r\n   '& .MuiInputBase-root': {\r\n              width: '275px',\r\n            fontSize: '13px',\r\n             [theme.breakpoints.up('sm')]: {\r\n                 padding: '15px',\r\n                 minWidth: '650px',\r\n                \r\n         },\r\n            // [theme.breakpoints.up('xs')]: {\r\n            //      minWidth: '275px',\r\n            // },\r\n            //  [theme.breakpoints.up('sm')]: {\r\n            //      minWidth: '275px',\r\n            // },\r\n            //   [theme.breakpoints.up('md')]: {\r\n            //      width: '550px',\r\n            // },\r\n            \r\n            '&:hover:before': {\r\n                 outlineColor:'red',\r\n           borderBottom:'1px solid grey',\r\n            borderBottomColor: 'none'\r\n        },\r\n            \r\n            '&:after': {\r\n             outlineColor:'none',\r\n            borderBottom: 'none ',\r\n            borderBottomColor: 'none'\r\n        },\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            paddingTop: '5px ',\r\n            paddingBottom: '1px ',\r\n            paddingRight: '5px ',\r\n               paddingLeft:'5px '\r\n        },\r\n\r\n        '& .MuiFormHelperText-root': {\r\n           width: '550px',\r\n            lineHeight: '1.3',\r\n            [theme.breakpoints.up('xs')]: {\r\n                 width: '320px',\r\n            },\r\n            [theme.breakpoints.up('sm')]: {\r\n                 width: '680px',\r\n            },\r\n              [theme.breakpoints.up('md')]: {\r\n                 width: '550px',\r\n            },\r\n              \r\n        },\r\n\r\n        '& .MuiInputBase-multiline': {\r\n             paddingTop: '5px ',\r\n            paddingBottom: '1px ',\r\n            paddingRight: '5px ',\r\n               paddingLeft:'5px '\r\n        }\r\n    },\r\n    paper: {\r\n        [theme.breakpoints.up('sm')]: {\r\n                padding: '15px',\r\n                minWidth: '680px',\r\n                \r\n        },\r\n   },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap  ',\r\n        justifyContent: 'space-between',\r\n        padding: '50px',\r\n         \r\n        [theme.breakpoints.up('xs')]: {\r\n            padding: '15px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '30px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            padding: '50px',\r\n        },\r\n    },\r\n    \r\n}));\r\n\r\n\r\nexport default function PersonalDataForm() {\r\n    \r\n    const [state, setState] = useState({\r\n\r\n            \"issuer\": \"undefined\",\r\n            \"issuercn\": \"undefined\",\r\n            \"serial\": \"undefined\",\r\n            \"subject\": \"undefined\",\r\n            \"subjectcn\":\"undefined\",\r\n            \"locality\": \"undefined\",\r\n            \"state\": \"undefined\",\r\n            \"o\": \"undefined\",\r\n            \"ou\": \"undefined\",\r\n            \"title\": \"undefined\",\r\n            \"givenname\": \"undefined\",\r\n            \"middlename\": \"undefined\",\r\n            \"lastname\": \"undefined\",\r\n            \"email\": \"undefined\",\r\n            \"address\": \"undefined\",\r\n            \"phone\": \"undefined\",\r\n            \"dns\": \"undefined\",\r\n            \"edrpoucode\": \"undefined\",\r\n            \"drfocode\": \"undefined\",\r\n            \"unzr\": \"undefined\"\r\n    });\r\n    \r\n\r\n        const handleChange = e => {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        };\r\n    \r\n\r\n   \r\n      \r\n        \r\n\r\n       const classes = useStyles();\r\n        \r\n\r\n    return (<Paper className={classes.paper} > <Toolbar style={{background:'rgb(237 235 236)', boxShadow: '1px 12px 8px 0px rgba(34, 60, 80, 0.2)'}}><Typography>Особисті дані користувача</Typography> </Toolbar>\r\n        <form className={classes.form}>\r\n            \r\n\r\n                <TextField\r\n                    \r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Реквізити видавника сертифіката(Надавач)\"\r\n                    name=\"issuer\"\r\n                    value={state.issuer}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n\r\n                        readOnly: true,\r\n                    }}\r\n                ></TextField>\r\n          \r\n         \r\n                <TextField\r\n                className={classes.root}\r\n                    type=\"text\"\r\n                    //   variant=\"outlined\"\r\n                    helperText=\"Загальне ім'я надавача\"\r\n                    name=\"issuercn\"\r\n                    value={state.issuercn}\r\n                    readOnly=\"readOnly\"\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                       \r\n                    }}\r\n                ></TextField>\r\n      \r\n         \r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Реєстраційний номер сертифіката у надавача\"\r\n                    name=\"serial\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    value={state.serial}\r\n                    readOnly=\"readOnly\"\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n          \r\n         \r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Реквізити видавника сертифіката(користувач)\"\r\n                    name=\"subject\"\r\n                    value={state.subject}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n            \r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Загальне ім'я користувача\"\r\n                    name=\"subjectcn\"\r\n                    value={state.subjectcn}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Місто (населений пункт) користувача\"\r\n                    name=\"locality\"\r\n                    value={state.locality}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Область (регіон) користувача\"\r\n                    name=\"state\"\r\n                    value={state.state}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Найменування організації користувача\"\r\n                    name=\"o\"\r\n                    value={state.o}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n            \r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Назва підрозділу організації користувача\"\r\n                    name=\"ou\"\r\n                    value={state.ou}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Посада користувача\"\r\n                    name=\"title\"\r\n                    value={state.title}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Ім'я користувача\"\r\n                    name=\"givenname\"\r\n                    value={state.givenname}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"По батькові користувача\"\r\n                    name=\"middlename\"\r\n                    value={state.middlename}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n                <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Прізвище користувача\"\r\n                    name=\"lastname\"\r\n                    value={state.lastname}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n            \r\n                    <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Адреса ел.пошти (e-mail) користувача\"\r\n                    name=\"email\"\r\n                    value={state.email}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n            \r\n                    <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Адреса (фізична) користувача\"\r\n                    name=\"address\"\r\n                    value={state.address}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n            <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Телефон користувача\"\r\n                    name=\"phone\"\r\n                    value={state.phone}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n            ></TextField>\r\n\r\n            \r\n             <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"DNS-ім'я користувача\"\r\n                    name=\"dns\"\r\n                    value={state.dns}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n\r\n\r\n            <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Код за ЄДРПОУ користувача\"\r\n                    name=\"edrpoucode\"\r\n                    value={state.edrpoucode}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n            ></TextField>\r\n            \r\n\r\n            <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"РНОКПП користувача або серія (за нявності) та номер паспорта (для користувачів, які через свої релігійні переконання відмовляються від прийняття реєстраційного номера облікової картки платника податків та офіційно повідомили про це відповідний контролюючий орган і мають відмітку у паспорті) (Додаток А, п. 8)\"\r\n                    name=\"drfocode\"\r\n                    value={state.drfocode}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n            ></TextField>\r\n            \r\n\r\n\r\n             <TextField\r\n                    multiline\r\n                    className={classes.root}\r\n                    type=\"text\"\r\n                    helperText=\"Унікальний номер запису в Єдиному демографічному реєстрі\"\r\n                    name=\"drfocode\"\r\n                    value={state.drfocode}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    onChange={handleChange}\r\n                ></TextField>\r\n            \r\n            </form></Paper>\r\n            \r\n        );\r\n    }\r\n\r\n\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport PersonalDataForm from '../components/PersonalDataForm';\r\nconst useStyles = makeStyles({\r\n    cancelBtn: {\r\n        background: 'red',\r\n        color: '#fff',\r\n        padding:'7px 20px',\r\n         '&:hover': {\r\n      color: '',\r\n        background: 'red',\r\n       \r\n    }\r\n    }\r\n\r\n})\r\nexport default function PersonalData() {\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <PersonalDataForm/>\r\n           <Button className={classes.cancelBtn}>Cкасувати</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AllInboxOutlinedIcon from '@material-ui/icons/AllInboxOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport const itemsList = [\r\n    {\r\n      text: 'Всі заявки',\r\n        path: '/all-statements',\r\n        exact: true,\r\nicon: <AllInboxOutlinedIcon/>,\r\n\r\n    },\r\n    {\r\n      text: 'Особисті дані',\r\n        path: '/personal-data',\r\n        exact: true,\r\nicon: <PermIdentityOutlinedIcon/>,\r\n    },\r\n  ];\r\n\r\n  const btnExit = [\r\n    {\r\n      text: 'Вийти з кабінету',\r\n          path: '/',\r\n        exact: true,\r\n    }\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    marginRight:'10px'\r\n  },\r\n  btnMenu: {\r\n    position: 'fixed',\r\n   \r\n        width: '45px',\r\n        height: '45px',\r\n        paddingTop: '12px',\r\n    paddingLeft: '9px',\r\n    \r\n   \r\n      \r\n        \r\n    },\r\n    btnClose: {\r\n      paddingTop: '17px',\r\n     width: '45px',\r\n        height: '45px', \r\n    },\r\n    btnHover: {\r\n    '&:hover': {\r\n      color: 'red',\r\n      background: '#fff',\r\n      border: '2px solid red',\r\n      borderRadius: '4px'\r\n    }\r\n  },\r\n  some: {\r\n      background:'red'\r\n    },\r\n     active: {\r\n        background: '#fff',\r\n       color: '#3f51b5 ',\r\n        border:'1px solid #3f51b5',\r\n        \r\n        borderRadius: '4px',\r\n     \r\n    },\r\n   \r\n    btn: {\r\n      color: 'balack',\r\n      '&:hover': {\r\n               backgroundColor: '#fff',\r\n             \r\n          }\r\n    },\r\n    activeBtnExit: {\r\n    background: '#fff',\r\n      color: 'red',\r\n      border: '1px solid red',\r\n     borderRadius: '4px',\r\n   '&:hover': {\r\n     backgroundColor: '#fff',\r\n     border:'1px solid red',\r\n             \r\n          }\r\n    },\r\n     list: {\r\n    \r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  \r\n    \r\n })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SwipeableTemporaryDrawer=(props)=> {\r\n    const classes = useStyles();\r\n    \r\n\r\n\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n    \r\n    const { history } = props;\r\n  \r\n\r\n  const location = useLocation();\r\n\r\n    \r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n     \r\n      <Divider />\r\n     <List>\r\n          {itemsList.map((item, index) => {\r\n            const { text, onClick } = item;\r\n\r\n             \r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.active : classes.btn}>\r\n                <div className={classes.icon}>\r\n                  {item.icon}\r\n</div>\r\n                <ListItemText primary={text}/>  \r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n        <List>\r\n          {btnExit.map((item, index) => {\r\n            const { text, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={() => history.push(item.path)} className={location.pathname == item.path ? classes.activeBtnExit : classes.btn}>\r\n<ExitToAppOutlinedIcon className={classes.icon}/>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n\r\n            )\r\n          })}\r\n        </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon color=\"primary\" fontSize=\"large\"/></Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter (SwipeableTemporaryDrawer);","import \"../src/App/App.css\";\r\nimport SideMenu from \"../src/components/SideMenu\";\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Employees from \"./pages/Employees/Employees\";\r\nimport PersonalData from \"./pages/PersonalData\";\r\nimport SwipeableTemporaryDrawer from \"./components/Header\";\r\n\r\n\r\n\r\n\r\nfunction Admin() {\r\n  // const [inactive, setInactive] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <SideMenu\r\n          // onCollapse={(inactive) => {\r\n          // setInactive(inactive);\r\n          // }}\r\n        />\r\n{/* className={`container ${inactive ? \"inactive\" : \"\"}`} */}\r\n        <div >\r\n          <div>\r\n            {/* <SwipeableTemporaryDrawer/> */}\r\n            {/* <TopHeader/> */}\r\n         </div>\r\n         \r\n  <Switch>\r\n                <Route exact from=\"/all-statements\" render={props => <Employees  {...props} />} />\r\n                 <Route exact from=\"/personal-data\" render={props => <PersonalData {...props} />} /> \r\n            </Switch>\r\n         \r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n\r\n\r\n\r\n\r\n\r\n","import \"./App.css\";\r\nimport SideMenu, { menuItems } from \"../components/SideMenu\";\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Admin from \"../Admin\";\r\n\r\n\r\n\r\n function App() {\r\n  const [inactive, setInactive] = useState(false);\r\n\r\n  return (\r\n    <Admin />)\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root') \r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}